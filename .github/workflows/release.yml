# DX@Scale CI/CD Template for GitHub
#----------------------------------------------------------------------------------------------------
# Maintained by @aly76 for DX@Scale
# Follows reference pipeline available at docs.dxatscale.io
#
#-----------------------------------------------------------------------------------------------------
# To know more about dxatscale, visit - https://docs.dxatscale.io
# To know more on sfpowerscripts, visit - https://sfpowerscripts.dxatscale.io/


# This pipeline is used to release a set of packages into respective environments
# Changelog will be written to changelog branch

name: 'CD - Release'


on:
  workflow_dispatch:
    inputs:
      pathToReleaseDef:
        description: "Path to release definition file"
        required: true
      releaseDefBranch:
        description: "Branch to fetch release definition file from"
        required: true
        default: "release-definition"

# Set the environment variables
#----------------------------------------------------------------------------------------------------
#   Authentication:
#     - TEST_SFDX_AUTH_URL
#     - PROD_SFDX_AUTH_URL
#-----------------------------------------------------------------------------------------------------
#   Tracking Metrics:
#     - SFPOWERSCRIPTS_NEWRELIC: 'true'
#     - SFPOWERSCRIPTS_NEWRELIC_API_KEY: '${{ secrets.NEWRELIC_INSIGHT_INSERT_KEYS }}'
#     - SFPOWERSCRIPTS_DATADOG: 'true'
#     - SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
#     - SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'

jobs:

  TEST:
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    if: github.ref == 'refs/heads/main' || contains(github.ref,'refs/heads/release')
    environment:
      name: TEST

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.releaseDefBranch }}


      - name: Authenticate to TEST environment
        run: |
          echo "${{ secrets.TEST_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url --sfdx-url-file ./authfile --alias test

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
         registry-url: 'https://npm.pkg.github.com'


      # Release to environment
      - name: Release to TEST
        run: |
          sfp orchestrator:release --targetorg test --releasedefinition ${{ github.event.inputs.pathToReleaseDef }} --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog -g "::group::,::endgroup::"
        env:
         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  PROD:
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    if: github.ref == 'refs/heads/main' || contains(github.ref,'refs/heads/release')
    environment:
      name: PROD

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.releaseDefBranch }}

      - name: Authenticate to PROD
        run: |
          echo "${{ secrets.PROD_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url --sfdx-url-file ./authfile --alias prod


      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
         registry-url: 'https://npm.pkg.github.com'


      # Release to environment
      - name: Release to PROD
        run: |
          sfp orchestrator:release --targetorg prod --releasedefinition ${{ github.event.inputs.pathToReleaseDef }} --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog -g "::group::,::endgroup::"
        env:
         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}